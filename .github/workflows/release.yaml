name: Release
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.runner }}

    strategy:
      matrix:
        include:
          - runner: ubicloud-standard-4
            target: x86_64-unknown-linux-musl
            arch: x64
          - runner: ubicloud-standard-4-arm
            target: aarch64-unknown-linux-musl
            arch: arm64

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y autoconf libtool nasm clang build-essential

      - name: Clone and build isa-l_crypto
        run: |
          git clone --depth 1 --branch v2.25.0 https://github.com/intel/isa-l_crypto
          cd isa-l_crypto
          ./autogen.sh
          ./configure --prefix=/usr --libdir=/usr/lib
          make -j$(nproc)
          sudo make install

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true
            components: rustfmt, clippy

      - name: Add musl target
        run: rustup target add ${{ matrix.target }}

      - name: Run tests
        run: cargo test --all

      - name: Build project
        run: |
          cargo build --release --target=${{ matrix.target }}

      - name: Package
        run: |
          cd target/${{ matrix.target }}/release
          tar -czf vhost-backend-${{ matrix.arch }}.tar.gz vhost-backend init-metadata
          cd -

      - uses: ncipollo/release-action@v1
        if: github.event_name == 'workflow_dispatch' && github.ref_type == 'tag'
        with:
          artifacts: "${{ github.workspace }}/target/${{ matrix.target }}/release/vhost-backend-${{ matrix.arch }}.tar.gz"
          body: "Release ${{ github.ref_name }}"
          allowUpdates: true
